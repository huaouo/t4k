@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

Person(client, "Android Client")

System_Boundary(backend, "T4K Backend") {
  Container(gateway, "API Gateway", "Istio Ingress", "")
  Container(authn, "Authentication Service", "", "")
  Container(account, "Account Service", "", "")
  Container(video, "Video Service", "", "")
  Container(community, "Community Service", "", "Favorite, comment and follow")

  Container(rdbmss, "RDBMS Service", "", "")
  Container(caches, "Cache Service", "", "")
  Container(s3s, "Object Service", "", "")
}

ContainerDb_Ext(rdbms, "RDBMS", "Distributed TiDB", "")
ContainerDb_Ext(cache, "Cache", "Distributed Redis", "")
ContainerDb_Ext(s3, "Object Storage", "Distributed MinIO", "")

Rel(client, gateway, "Request", "HTTPS")
Rel(gateway, authn, "Invoke", "HTTP")
Rel(gateway, account, "Forward", "HTTP")
Rel(gateway, video, "Forward", "HTTP")
Rel(gateway, community, "Forward", "HTTP")
Rel(gateway, s3s, "Forward", "HTTP")
Rel(authn, rdbmss, "Invoke", "gRPC")
Rel(authn, caches, "Invoke", "gRPC")
Rel(account, rdbmss, "Invoke", "gRPC")
Rel(video, rdbmss, "Invoke", "gRPC")
Rel(video, s3s, "Invoke", "HTTP")
Rel(community, rdbmss, "Invoke", "gRPC")
Rel(rdbmss, rdbms, "Read/Write", "TCP")
Rel(caches, cache, "Read/Write", "TCP")
Rel(s3s, s3, "Read/Write", "HTTP")
@enduml
