@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

Person(client, "Android Client")

System_Boundary(backend, "T4K Backend") {
  Container(gateway, "API Gateway", "Istio Ingress", "")
  Container(account, "Account Service", "", "")
  Container(video, "Video Service", "", "")
  Container(community, "Community Service", "", "Favorite, comment and follow")
  Container(communityc, "Community Service Consumer", "", "")

  Container(rdbmss, "RDBMS Service", "", "")
  Container(caches, "Cache Service", "", "")
  Container(s3s, "Object Service", "", "")

  ContainerQueue(queue, "Message Queue", "Kafka", "")
  ContainerDb(rdbms, "RDBMS", "Distributed TiDB", "")
  ContainerDb(cache, "Cache", "Distributed Redis", "")
  ContainerDb(s3, "Object Storage", "Distributed MinIO", "")
}

Rel(client, gateway, "Request", "HTTPS")
Rel(gateway, account, "Invoke/Forward", "HTTP")
Rel(gateway, video, "Forward", "HTTP")
Rel(gateway, community, "Forward", "HTTP")
Rel(gateway, s3s, "Forward", "HTTP")
Rel(account, rdbmss, "Invoke", "gRPC")
Rel(video, rdbmss, "Invoke", "gRPC")
Rel(video, s3s, "Invoke", "HTTP")
Rel(community, queue, "Produce", "TCP")
Rel(queue, communityc, "Consume", "TCP")
Rel(communityc, rdbmss, "Invoke", "gRPC")
Rel(rdbmss, rdbms, "Read/Write", "TCP")
Rel(caches, cache, "Read/Write", "TCP")
Rel(s3s, s3, "Read/Write", "HTTP")
@enduml
